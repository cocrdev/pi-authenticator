{
  "@@last_modified": "2024-09-20",
  "@@locale": "en",
  "@accept": {
    "description": "Label for e.g. a button. Something gets accepted by the user."
  },
  "@addToken": {
    "description": "The button to open the screen to add tokens by hand."
  },
  "@algorithm": {
    "description": "Title of the dropdown button where the encoding is selected."
  },
  "@algorithmUnsupported": {
    "placeholders": {
      "algorithm": {
        "example": "MD5"
      }
    }
  },
  "@allTokensSynchronized": {
    "description": "Content of the push synchronization dialog. Signaling the user that everything worked."
  },
  "@authNotSupportedBody": {
    "description": "Message shown as a dialog body that tells the user that device credentials or biometrics must be setup for this action."
  },
  "@authNotSupportedTitle": {
    "description": "Message shown as a dialog title that tells the user that device credentials or biometrics must be setup for this action."
  },
  "@authToAcceptPushRequest": {
    "description": "Message to accepting a push request for authentication."
  },
  "@authToDeclinePushRequest": {
    "description": "Message for declining a push request for authentication."
  },
  "@authenticateToShowOtp": {
    "description": "Reason to authenticate when trying to view a one time password."
  },
  "@authenticateToUnLockToken": {
    "description": "Reason to authenticate when trying to lock or unlock a token."
  },
  "@biometricHint": {
    "description": "Hint message advising the user how to authenticate with biometrics. It is used on Android side. Maximum 60 characters."
  },
  "@biometricNotRecognized": {
    "description": "Message to let the user know that authentication was failed. It is used on Android side. Maximum 60 characters."
  },
  "@biometricRequiredTitle": {
    "description": "Message showed as a title in a dialog which indicates the user has not set up biometric authentication on their device. It is used on Android side. Maximum 60 characters."
  },
  "@biometricSuccess": {
    "description": "Message to let the user know that authentication was successful. It is used on Android side. Maximum 60 characters."
  },
  "@cancel": {
    "description": "Button to cancel an action."
  },
  "@checkServerCertificate": {
    "description": "Error message when the server certificate should be checked."
  },
  "@checkYourNetwork": {
    "description": "Tells the user to check the network connection."
  },
  "@clearErrorLog": {
    "description": "Button to clear the error log."
  },
  "@confirmDeletion": {
    "description": "Title of the dialog where a token can be deleted."
  },
  "@confirmDeletionOf": {
    "description": "Asks for confirmation on deleting a token.",
    "placeholders": {
      "name": {
        "example": "PUSH1234"
      }
    },
    "type": "text"
  },
  "@confirmFolderDeletionHint": {
    "description": "Gives the user a hint about the consequences of deleting a folder."
  },
  "@confirmTokenDeletionHint": {
    "description": "Gives the user a hint about the consequences of deleting a token."
  },
  "@connectionFailed": {
    "description": "Tells the user that the connection failed."
  },
  "@container": {
    "description": "Title for the container view."
  },
  "@couldNotSignMessage": {
    "description": "Tells the user that the message could not be signed."
  },
  "@counter": {
    "description": "Describes the field where the tokens counter should be entered."
  },
  "@createdAt": {
    "description": "Label for the creation date of the token."
  },
  "@creator": {
    "description": "Label for the creator of the token."
  },
  "@darkTheme": {
    "description": "The dark theme."
  },
  "@decline": {
    "description": "Label for e.g. a button. Something gets declined by the user."
  },
  "@delete": {
    "description": "Label that describes deleting the token."
  },
  "@deviceCredentialsRequiredTitle": {
    "description": "Message showed as a title in a dialog which indicates the user has not set up credentials authentication on their device. It is used on Android side. Maximum 60 characters."
  },
  "@deviceCredentialsSetupDescription": {
    "description": "Message advising the user to go to the settings and configure device credentials on their device. It shows in a dialog on Android side."
  },
  "@digits": {
    "description": "Title of the dropdown button where the number of digits for the opt value is selected."
  },
  "@dismiss": {
    "description": "Text of a button that closes a dialog."
  },
  "@enablePolling": {
    "description": "Name of the setting switch that enables polling."
  },
  "@encoding": {
    "description": "Title of the dropdown button where the encoding is selected."
  },
  "@enterDetailsForToken": {
    "description": "Title of the screen where tokens are created manually, tells the user to enter all required values."
  },
  "@errorLogCleared": {
    "description": "Message that tells the user that the error log was cleared."
  },
  "@errorLogEmpty": {
    "description": "Message that tells the user that the error log is empty."
  },
  "@errorLogTitle": {
    "description": "Title of the error log screen."
  },
  "@errorMailBody": {
    "description": "Message for email body"
  },
  "@errorRollOutFailed": {
    "description": "Tells the user that the token could not be rolled out, because a network error occurred.",
    "placeholders": {
      "name": {
        "example": "PUSH1234A"
      }
    },
    "type": "text"
  },
  "@errorRollOutNoConnectionToServer": {
    "description": "Tells the user that the roll-out failed because the server could not be reached.",
    "placeholders": {
      "name": {
        "example": "PUSH1234A"
      }
    }
  },
  "@errorRollOutSSLHandshakeFailed": {
    "description": "Tells the user that the roll-out failed because the SSL handshake failed."
  },
  "@errorRollOutUnknownError": {
    "description": "Tells the user that the roll-out failed because of an unknown error.",
    "placeholders": {
      "e": {
        "example": "IllegalArgumentException on Line 5 ..."
      }
    },
    "type": "text"
  },
  "@errorSynchronizationNoNetworkConnection": {
    "description": "Tells the user that synchronizing the push tokens failed because the server could not be reached."
  },
  "@errorTokenExpired": {
    "placeholders": {
      "name": {
        "example": "PUSH1234A"
      }
    }
  },
  "@errorUnlinkingPushToken": {
    "description": "Error message when unlinking a push token failed.",
    "placeholders": {
      "label": {
        "example": "PUSH1234A"
      }
    }
  },
  "@errorWhenPullingChallenges": {
    "description": "errorWhenPullingChallenges",
    "placeholders": {
      "name": {
        "example": "PUSH1234A"
      }
    }
  },
  "@failedToLoad": {
    "placeholders": {
      "name": {
        "example": "token data"
      }
    }
  },
  "@feedbackPrivacyPolicy2": {
    "description": "Taping on this should open the privacy policy."
  },
  "@generatingPhonePart": {
    "description": "Title of a dialog telling the user that the phone part gets generated right now."
  },
  "@generatingRSAKeyPair": {
    "description": "Message for the rollout process"
  },
  "@generatingRSAKeyPairFailed": {
    "description": "Message for the rollout process"
  },
  "@goToSettingsButton": {
    "description": "Message showed on a button that the user can click to go to settings pages from the current dialog. It is used on both Android and iOS side. Maximum 30 characters."
  },
  "@goToSettingsDescription": {
    "description": "Message advising the user to go to the settings and configure device credentials or biometrics on their device."
  },
  "@guide": {
    "description": "Button to open the guide screen."
  },
  "@handshakeFailed": {
    "description": "Error message when the handshake failed."
  },
  "@importedVia": {
    "description": "Label for the import method of the token."
  },
  "@internalServerError": {
    "placeholders": {
      "code": {
        "example": "500"
      }
    }
  },
  "@invalidValue": {
    "description": "Error message when the value is not valid for the parameter.",
    "placeholders": {
      "parameter": {
        "example": "counter"
      },
      "type": {
        "example": "int"
      },
      "value": {
        "example": "5"
      }
    }
  },
  "@invalidValueIn": {
    "placeholders": {
      "map": {
        "example": "query parameters"
      },
      "parameter": {
        "example": "counter"
      },
      "type": {
        "example": "int"
      },
      "value": {
        "example": "5"
      }
    }
  },
  "@isExpotableQuestion": {
    "description": "Label for the question if the token is exportable."
  },
  "@isPiTokenQuestion": {
    "description": "Label for the question if the token is a privacyIDEA token."
  },
  "@language": {
    "description": "Title of language setting group."
  },
  "@legacySigningErrorMessage": {
    "description": "Message of the error dialog that is shown when an error occurs while using a legacy token."
  },
  "@legacySigningErrorTitle": {
    "description": "Title of the error dialog that is shown when an error occurs while using a legacy token.",
    "placeholders": {
      "tokenLabel": {
        "example": "PUSH1234A"
      }
    }
  },
  "@lightTheme": {
    "description": "The light theme."
  },
  "@linkedContainer": {
    "description": "Label for the linked container serial number."
  },
  "@lock": {
    "description": "Description of button that locks a token."
  },
  "@lockOut": {
    "description": "Message advising the user to re-enable biometrics on their device. It shows in a dialog on iOS side."
  },
  "@logMenu": {
    "description": "Button to open the log menu."
  },
  "@malformedData": {
    "description": "Error message when the data is malformed."
  },
  "@missingRequiredParameter": {
    "description": "Error message when a required parameter is missing.",
    "placeholders": {
      "parameter": {
        "example": "counter"
      }
    }
  },
  "@missingRequiredParameterIn": {
    "description": "Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.",
    "placeholders": {
      "map": {
        "example": "query parameters"
      },
      "parameter": {
        "example": "counter"
      }
    }
  },
  "@mustNotBeEmpty": {
    "placeholders": {
      "field": {
        "example": "Name"
      }
    }
  },
  "@name": {
    "description": "Describes the field where the tokens name should be entered."
  },
  "@noFbToken": {
    "description": "Tells the user that there is no Firebase token available."
  },
  "@noNetworkConnection": {
    "description": "Tells the user that there is no network connection."
  },
  "@noResultText1": {
    "description": "first no result text"
  },
  "@noResultText2": {
    "description": "second no result text"
  },
  "@noResultTitle": {
    "description": "No tokens stored yet."
  },
  "@notAnInteger": {
    "description": "Error message when the user entered a value that is not an integer."
  },
  "@notAnNumber": {
    "description": "Error message when the user entered a value that is not a number."
  },
  "@ok": {
    "description": "Button to confirm an action."
  },
  "@onBoardingTitle1": {
    "placeholders": {
      "appName": {
        "example": "privacyIDEA Authenticator"
      }
    }
  },
  "@open": {
    "description": "Button to open something."
  },
  "@originApp": {
    "description": "Label for the origin app."
  },
  "@originDetails": {
    "description": "Title of the origin details menu."
  },
  "@otpValueCopiedMessage": {
    "description": "Tells the user that the otp value was copied to the clipboard.",
    "placeholders": {
      "otpValue": {
        "example": "055374"
      }
    },
    "type": "text"
  },
  "@parsingResponse": {
    "description": "Message for the rollout process"
  },
  "@parsingResponseFailed": {
    "description": "Message for the rollout process"
  },
  "@period": {
    "description": "Title of the dropdown button where the period of the totp token is selected."
  },
  "@phonePart": {
    "description": "Title of a dialog telling the user that the phone was generated, and it is shown to the user."
  },
  "@pleaseEnterANameForThisToken": {
    "description": "Hint telling the user to enter a name for a token."
  },
  "@pleaseEnterASecretForThisToken": {
    "description": "Hint telling the user to enter a secret for a token."
  },
  "@pollingChallenges": {
    "type": "text"
  },
  "@pollingFailed": {
    "description": "Tells the user that the polling failed."
  },
  "@pollingFailedFor": {
    "description": "Tells the user that the polling failed.",
    "placeholders": {
      "serial": {
        "example": "PUSH1234A"
      }
    }
  },
  "@pushToken": {
    "description": "Title for the settings block concerning the push tokens."
  },
  "@rename": {
    "description": "Label that describes renaming the token."
  },
  "@renameToken": {
    "description": "Title of the dialog where a new name for a token can be entered."
  },
  "@renameTokenFolder": {
    "description": "Title of the dialog where a new name for a token folder can be entered."
  },
  "@requestInfo": {
    "description": "Description of the authentication request.",
    "placeholders": {
      "account": {
        "example": "GitHub"
      },
      "issuer": {
        "example": "privacyIDEA"
      }
    }
  },
  "@requestPushChallengesPeriodically": {
    "description": "The description of the polling feature."
  },
  "@retry": {
    "description": "Label for e.g. a button. Something is tried to be done again."
  },
  "@rolloutCompleted": {
    "description": "Message for the rollout process"
  },
  "@scanQrCode": {
    "description": "The button to scan otpauth qr-codes."
  },
  "@secretIsRequired": {
    "description": "Error message when the secret is missing."
  },
  "@secretKey": {
    "description": "Describes the field where the tokens secret should be entered."
  },
  "@send": {
    "description": "Button to send the error log."
  },
  "@sendErrorDialogBody": {
    "description": "Description shown to the user about what info the error report contains."
  },
  "@sendErrorLogDescription": {
    "description": "Explanation for the user what he will send."
  },
  "@sendPushRequestResponseFailed": {
    "description": "Error message when the response to a push request could not be sent."
  },
  "@sendingRSAPublicKey": {
    "description": "Message for the rollout process"
  },
  "@sendingRSAPublicKeyFailed": {
    "description": "Message for the rollout process"
  },
  "@serverNotReachable": {
    "description": "Tells the user that the server could not be reached."
  },
  "@settings": {
    "description": "Button to open the settings page."
  },
  "@showDetails": {
    "description": "Button to show details."
  },
  "@showErrorLog": {
    "description": "Button to show the error log."
  },
  "@showPrivacyPolicy": {
    "description": "Button to show the privacy policy."
  },
  "@signInTitle": {
    "description": "Message showed as a title in a dialog which indicates the user that they need to scan biometric to continue. It is used on Android side. Maximum 60 characters."
  },
  "@someTokensDoNotSupportPolling": {
    "description": "Tells the user, that the following tokens do not support polling.",
    "type": "text"
  },
  "@startRollout": {
    "description": "Label that tells the user that the token is being rolled out."
  },
  "@statusCode": {
    "description": "Tells the user the status code of the error.",
    "placeholders": {
      "statusCode": {
        "example": "400"
      }
    }
  },
  "@sync": {
    "description": "Text of button that is used to synchronize push tokens."
  },
  "@syncContainerFailed": {
    "description": "Error message when synchronizing a container failed."
  },
  "@syncFbTokenFailed": {
    "description": "Headline for the list of tokens where the synchronization failed."
  },
  "@synchronizePushTokens": {
    "description": "Title of synchronizing push tokens in settings."
  },
  "@synchronizesTokensWithServer": {
    "description": "Description of synchronizing push tokens in settings."
  },
  "@synchronizingTokens": {
    "description": "Title of the push synchronization dialog."
  },
  "@systemTheme": {
    "description": "The systems theme."
  },
  "@theSecretDoesNotFitTheCurrentEncoding": {
    "description": "Hint telling the user that the secret does not fit the selected encoding."
  },
  "@theme": {
    "description": "Title of the setting group where the theme can be selected."
  },
  "@timeOut": {
    "description": "Error message when a request times out."
  },
  "@tokenDataParseError": {
    "description": "Error message when the token data could not be parsed."
  },
  "@tokenDetails": {
    "description": "Title of the token details menu."
  },
  "@tokenSerial": {
    "description": "Label for the token serial number."
  },
  "@tokensDoNotSupportSynchronization": {
    "description": "Informs the user that the following tokens cannot be synchronized as they do not support that."
  },
  "@type": {
    "description": "Title of the dropdown button where the type of the token is selected."
  },
  "@unexpectedError": {
    "description": "Title of page report mode."
  },
  "@unknown": {
    "description": "Tells that something is unknown."
  },
  "@unlock": {
    "description": "Description of button that unlocks a token."
  },
  "@unsupported": {
    "placeholders": {
      "name": {
        "example": "piauth version"
      },
      "value": {
        "example": "5"
      }
    }
  },
  "@useDeviceLocaleDescription": {
    "description": "Description of the switch tile where using the devices language can be enabled."
  },
  "@useDeviceLocaleTitle": {
    "description": "Title of the switch tile where using the devices language can be enabled."
  },
  "@valueNotAllowed": {
    "placeholders": {
      "parameter": {
        "example": "counter"
      },
      "type": {
        "example": "int"
      },
      "value": {
        "example": "-1"
      }
    }
  },
  "@valueNotAllowedIn": {
    "placeholders": {
      "map": {
        "example": "query parameters"
      },
      "parameter": {
        "example": "counter"
      },
      "type": {
        "example": "int"
      },
      "value": {
        "example": "-1"
      }
    }
  },
  "@verboseLogging": {
    "description": "Title of the switch tile where verbose logging can be enabled."
  },
  "accept": "Accept",
  "addANewFolder": "Create new folder",
  "addFolder": "Add folder",
  "addSystemInfo": "Add system information",
  "addToken": "Add token",
  "addTokenManually": "Add token manually",
  "algorithm": "Algorithm",
  "algorithmUnsupported": "The algorithm {algorithm} is not supported",
  "allTokensSynchronized": "All tokens are synchronized.",
  "asFile": "As file",
  "asQrCode": "As QR code",
  "askLogSendedDescription": "Did you send the log, and do you want to clear it now?",
  "authNotSupportedBody": "This action requires the device to be secured by credentials or biometrics.",
  "authNotSupportedTitle": "Device credentials or biometrics required",
  "authToAcceptPushRequest": "Please authenticate to accept the push request.",
  "authToDeclinePushRequest": "Please authenticate to decline the push request.",
  "authenticateToShowOtp": "Please authenticate to show one time password.",
  "authenticateToUnLockToken": "Please authenticate to change the lock status of the token.",
  "authentication": "Authentication",
  "biometricHint": "Authentication required",
  "biometricNotRecognized": "Not recognized. Try again.",
  "biometricRequiredTitle": "Biometrics not setup",
  "biometricSuccess": "Authentication successful",
  "butDiscardIt": "but discard it",
  "cancel": "Cancel",
  "checkServerCertificate": "Please check the server certificate",
  "checkYourNetwork": "Please check your network connection and try again.",
  "clearErrorLog": "Clear",
  "closeSearchTokens": "Close search",
  "confirmDeletion": "Confirm deletion",
  "confirmDeletionOf": "Are you sure you want to delete {name}?",
  "confirmFolderDeletionHint": "Deleting a folder has no effect on the tokens in it.\nThe tokens are moved to the main list.",
  "confirmPassword": "Confirm password",
  "confirmTokenDeletionHint": "You may no longer be able to log in if you delete this token.\nPlease make sure that you can log in to the associated account without this token.",
  "confirmation": "Confirmation",
  "connectionFailed": "Connection failed.",
  "container": "Container",
  "continueButton": "Continue",
  "copyOTPToClipboard": "Copy OTP to clipboard",
  "couldNotConnectToServer": "Could not connect to server",
  "couldNotSignMessage": "Could not sign message.",
  "counter": "Counter",
  "create": "Create",
  "createdAt": "Created on",
  "creator": "Creator",
  "decline": "Decline",
  "declineIt": "decline it",
  "decrypt": "Decrypt",
  "decryptErrorButtonDelete": "Delete",
  "decryptErrorButtonRetry": "Retry",
  "decryptErrorButtonSendError": "Send error",
  "decryptErrorContent": "Unfortunately, the app was unable to decrypt your tokens. This indicates that the encryption key is broken. You can try again or delete the app data, which would delete the tokens in the app.",
  "decryptErrorDeleteConfirmationContent": "Are you sure you want to delete the app data?",
  "decryptErrorTitle": "Decryption error",
  "delete": "Delete",
  "deleteLockedToken": "Please authenticate to delete the locked token.",
  "deviceCredentialsRequiredTitle": "Device credentials not set up",
  "deviceCredentialsSetupDescription": "Setup device credentials in the device's settings",
  "digits": "Digits",
  "dismiss": "Dismiss",
  "done": "Done",
  "edit": "Edit",
  "editLockedToken": "Please authenticate to edit the locked token.",
  "editToken": "Edit Token",
  "enablePolling": "Enable polling",
  "encoding": "Encoding",
  "enterDetailsForToken": "Enter token details",
  "enterLink": "Enter link",
  "enterPasswordToEncrypt": "Enter a password to encrypt the tokens. This password will be required to import the tokens.",
  "errorLogCleared": "Error log cleared.",
  "errorLogEmpty": "The error log is empty.",
  "errorLogTitle": "Error log",
  "errorMailBody": "The error log file is attached.\nYou can replace this text with additional information about the error.",
  "errorRollOutFailed": "Rolling out token {name} failed.",
  "errorRollOutNoConnectionToServer": "Rolling out token {name} failed, the server could not be reached.",
  "errorRollOutNotPossibleAnymore": "Rolling out this Token is not possible anymore.",
  "errorRollOutSSLHandshakeFailed": "SSL handshake failed. Roll-out not possible.",
  "errorRollOutUnknownError": "An unknown error occurred. Roll-out not possible: {e}",
  "errorSavingFile": "Saving to file failed",
  "errorSynchronizationNoNetworkConnection": "Synchronizing tokens failed, privacyIDEA server could not be reached.",
  "errorTokenExpired": "The token {name} has expired.",
  "errorUnlinkingPushToken": "Failed to unlink the push token {label}.",
  "errorWhenPullingChallenges": "An error occured when polling for challenges of {name}",
  "exampleUrl": "Please enter a valid URL like: \"https://example.com/\"",
  "expandLockedFolder": "Please authenticate to uncollapse the locked folder.",
  "export": "Export",
  "exportAllTokens": "Export all tokens",
  "exportLockedTokenReason": "Please authenticate to export locked tokens.",
  "exportNonPrivacyIDEATokens": "Export non-privacyIDEA tokens",
  "exportTokens": "Export tokens",
  "exportingTokens": "Exporting tokens...",
  "failedToLoad": "Failed to load: \"{name}\"",
  "feedback": "Feedback",
  "feedbackDescription": "If you have any questions, suggestions or problems, please let us know.",
  "feedbackHint": "A ready-made e-mail will open, which you can send to us. If desired, information about your device and the version of the application will be added. You can check and edit the email before sending it.",
  "feedbackPrivacyPolicy1": "By sending the feedback you agree to our ",
  "feedbackPrivacyPolicy2": "privacy policy",
  "feedbackPrivacyPolicy3": ".",
  "feedbackSentDescription": "Thank you very much for your help in making this application better!",
  "feedbackSentTitle": "Feedback sent",
  "feedbackTitle": "Your feedback is always welcome!",
  "fileSavedToDownloadsFolder": "File saved to Downloads folder",
  "findingQrCodeInImage": "Looking for QR code in image...",
  "firebaseToken": "Firebase Token",
  "folderName": "Folder name",
  "generatingPhonePart": "Generating phone part",
  "generatingRSAKeyPair": "Generating RSA key pair",
  "generatingRSAKeyPairFailed": "Generating RSA key pair failed",
  "goToSettingsButton": "Go to settings",
  "goToSettingsDescription": "Authentication by credentials or biometrics is not set up on your device. Please set it up in the device's settings.",
  "grantCameraPermissionDialogButton": "Grant permission",
  "grantCameraPermissionDialogContent": "Please grant camera permission to scan QR codes.",
  "grantCameraPermissionDialogPermanentlyDenied": "Camera permission is permanently denied. Please grant camera permission in your Phone's settings.",
  "grantCameraPermissionDialogTitle": "Camera permission is not granted",
  "handshakeFailed": "Handshake failed",
  "hidePushTokens": "Hide push tokens",
  "hidePushTokensDescription": "Hide push tokens from the token list. This will not delete the tokens and they will still be visible on a separate screen.",
  "imageUrl": "Image URL",
  "importConflictToken": "{count, plural, zero{There is no conflict with existing tokens.} one{There is a conflict with existing tokens.\nPlease select which one you would like to keep.} other{There are conflicts with existing tokens.\nPlease select the tokens you wish to keep.}}",
  "importExistingToken": "{count, plural, zero{No token was found that is already in the application.} one{A token was found that already exists in the application.} other{{count} tokens was found that are already in the application.}}",
  "importExportTokens": "Import/Export tokens",
  "importFailedToken": "{count, plural, zero{No token Failed to import.} one{Failed to import a token.} other{Failed to import {count} tokens.}}",
  "importHint2FAS": "Select your 2FAS backup.\nIf you do not have a backup, create one in the 2FAS app. We recommend using a password.",
  "importHintAegisBackupFile": "Select your Aegis export (.JSON).\nIf you do not have an export, please create one via the settings menu in the Aegis app. The use of a password is recommended.",
  "importHintAegisLink": "Enter the link you receive when you transfer entries from Aegis.",
  "importHintAegisQrScan": "Scan the QR code you receive when you transfer entries from Aegis.",
  "importHintAuthenticatorProFile": "To create a backup of the Authenticator Pro app, navigate to the settings and tap on \"Auto backup\". Select a storage location and set a password. Then press \"Back up now\" to export the tokens.",
  "importHintFreeOtpPlusFile": "To create a backup of the FreeOTP+ app, tap on the three dots in the upper right corner and select \"Export\". You can choose between JSON and URI format. We recommend to delete the backup after importing it, because it is not encrypted.",
  "importHintFreeOtpPlusQrScan": "Scan the QR code you receive when you press the three dots in the tile of the token and select \"Share QR code\".",
  "importHintGoogleQrFile": "Select an image file with the QR code you receive when you export your accounts from Google Authenticator.\n!! Note that it is not safe to save the QR code on your device as the tokens are not encrypted !!",
  "importHintGoogleQrScan": "Scan the QR code you receive when you export your accounts from Google Authenticator.",
  "importHintPrivacyIdeaFile": "To create a backup, go to the settings and tap on \"Export\". Select \"As file\", select the tokens you want to export. Then tap on \"Export\" and set a password. The storage location is the download folder on your device.",
  "importHintPrivacyIdeaQrScan": "Um QR-Codes der Token zu erstellen, navigieren Sie zu den Einstellungen und tippen auf \"Exportieren\". Wählen Sie dann \"Als QR-Code\" und tippen Sie auf den zu exportierenden Token. Diese Variante ist nur für die direkte Übertragung auf ein anderes Gerät geeignet, da der QR-Code nicht verschlüsselt ist.",
  "importNTokens": "{count, plural, zero{Import no token} one{Import one token} other{Import {count} tokens}}",
  "importNewToken": "{count, plural, zero{No new token was found.} one{A new token was found that can be imported.} other{{count} new tokens were found that can be imported.}}",
  "importTokens": "Import token",
  "importedVia": "Imported via",
  "increaseCounter": "Increase counter",
  "internalServerError": "Internal server error ({code})",
  "introAddFolder": "You can create folders\nto organize your tokens.",
  "introAddTokenManually": "If you don't want to scan a QR code, you can also add tokens manually.",
  "introDragToken": "Reorganize your tokens by pressing it for a few seconds and then dragging it to the desired position.",
  "introEditToken": "Here you can edit the token name and see some details.",
  "introHidePushTokens": "Your push tokens are hidden now.\nBut you can still see them on the push token screen.",
  "introLockToken": "To improve security even more, you can lock tokens.\nThen the token can only be used after authentication.",
  "introPollForChallenges": "You can check for new challenges by dragging down the token list.",
  "introScanQrCode": "You can scan QR codes to add tokens.\nWe support every common Two-Factor-Authentication token and also the privacyIDEA tokens.",
  "introTokenSwipe": "Swipe tokens to the left to see available actions.",
  "invalidBackupFile": "The selected file is not a valid backup of {appName}.",
  "invalidLink": "The link entered is not a valid token of {appName}, or it is not supported.",
  "invalidQrFile": "The selected file does not contain a valid QR code from {appName}.",
  "invalidQrScan": "The scanned QR code is not a valid backup of {appName}.",
  "invalidValue": "The {type} \"{value}\" is not valid for \"{parameter}\"",
  "invalidValueIn": "The {type} \"{value}\" is not valid for \"{parameter}\" in \"{map}\"",
  "isExpotableQuestion": "Is exportable?",
  "isPiTokenQuestion": "It's a privacyIDEA token?",
  "language": "Language",
  "legacySigningErrorMessage": "The token was enrolled in a old version of this app, which may cause trouble using it.\nIt is suggested to enroll a new push token if the problem persist!",
  "legacySigningErrorTitle": "An error occured while using the legacy token: {tokenLabel}",
  "licenses": "Licenses",
  "licensesAndVersion": "Licenses and version",
  "linkedContainer": "Linked container",
  "lock": "Lock",
  "lockOut": "Biometric authentication is disabled. Please lock and unlock your screen to enable it.",
  "logMenu": "Log menu",
  "malformedData": "Malformed data",
  "markQrCode": "Mark QR Code",
  "missingRequiredParameter": "The value for the [{parameter}] parameter is required, but is missing.",
  "missingRequiredParameterIn": "The value for the parameter [{parameter}] is required, but is missing in \"{map}\".",
  "mustNotBeEmpty": "{field} must not be empty",
  "name": "Name",
  "no": "No",
  "noFbToken": "No Firebase token available",
  "noMailAppDescription": "There is no e-mail app installed or initialised on this device, please try again when you are able to send an email message.",
  "noMailAppTitle": "No mail app found",
  "noNetworkConnection": "No network connection.",
  "noPublicKey": "No public key available",
  "noResultText1": "Tap the ",
  "noResultText2": " button to get started!",
  "noResultTitle": "No tokens stored yet.",
  "noTokenToExport": "No token available for export",
  "noTokenToImport": "No token found to import",
  "notAnInteger": "The value is not an integer.",
  "notAnNumber": "The value is not a number.",
  "ok": "Ok",
  "oneMore": "One more",
  "open": "Open",
  "optionalMessage": "Optional message",
  "originApp": "Origin app",
  "originDetails": "Origin details",
  "otpValueCopiedMessage": "Password \"{otpValue}\" copied to clipboard.",
  "parsingResponse": "Parsing response",
  "parsingResponseFailed": "Parsing response failed",
  "password": "Password",
  "passwordCannotBeEmpty": "Password cannot be empty",
  "passwordCannotContainWhitespace": "Password cannot contain whitespace",
  "passwordMustBeAtLeast8Characters": "Password must be at least 8 characters",
  "passwordMustContainLowercaseLetter": "Password must contain lowercase letter",
  "passwordMustContainNumber": "Password must contain number",
  "passwordMustContainSpecialCharacter": "Password must contain special character",
  "passwordMustContainUppercaseLetter": "Password must contain uppercase letter",
  "passwordsDoNotMatch": "Passwords do not match",
  "patchNotesBugFixes": "Bug fixes",
  "patchNotesDialogTitle": "What's new?",
  "patchNotesImprovements": "Improvements",
  "patchNotesNewFeatures": "New features",
  "patchNotesV4_3_0NewFeatures1": "Support for importing tokens from Google, Aegis and 2FAS Authenticator has been added. More import sources will be added in the future.",
  "patchNotesV4_3_0NewFeatures2": "Added feedback option to the settings.",
  "patchNotesV4_3_0NewFeatures3": "Push tokens can now be hidden from the token list.",
  "patchNotesV4_3_0NewFeatures4": "Introductions have been added to help new users get started.",
  "patchNotesV4_3_0NewFeatures5": "You can now search for tokens by tapping the magnifying glass in the upper right corner.",
  "patchNotesV4_3_0NewFeatures6": "Added HomeWidget token for Android 12 and later.",
  "patchNotesV4_3_1BugFix1": "Fixed an issue where the otp value was not displayed after authentication on some devices.",
  "patchNotesV4_3_1Improvement1": "Improved the qr code scanner.",
  "patchNotesV4_4_0Improvement1": "Further import sources have been added.",
  "patchNotesV4_4_0Improvement2": "Improved recognition of QR codes from image files.",
  "patchNotesV4_4_0NewFeatures1": "It is now possible to export tokens where it can be ensured that they are not privacyIDEA tokens. Currently, it cannot be ruled out that tokens added via the QR code scanner originate from privacyIDEA. The differentiation will be improved in future versions.",
  "patchNotesV4_4_0NewFeatures2": "Added support for privacyIDEA's \"require presence\"",
  "period": "Period",
  "phonePart": "Phone part:",
  "pleaseEnterANameForThisToken": "Please enter a name for this token.",
  "pleaseEnterASecretForThisToken": "Please enter a secret for this token.",
  "pleaseSyncManuallyWhenNetworkIsAvailable": "Please synchronize the push tokens manually via the settings when a network connection is available.",
  "pollingChallenges": "Polling for new challenges",
  "pollingFailed": "Polling failed.",
  "pollingFailedFor": "Polling failed for {serial}",
  "privacyPolicy": "Privacy policy",
  "publicKey": "Public Key",
  "pushEndpointUrl": "Push endpoint URL",
  "pushRequestParseError": "Push request could not be parsed.",
  "pushToken": "Push Token",
  "pushTokens": "Push Tokens",
  "qrFileDecodeError": "It was not possible to decode the QR code from the selected image, please use the QR code scanner instead.",
  "qrInFileNotFound": "No QR code was found in the selected image.",
  "qrInFileNotFound2": "You can show me where the QR code is located.",
  "qrInFileNotFound3": "I expect i will find the code if it is in the middle of the marked area.",
  "qrNotFound": "No QR code found!",
  "qrScan": "Scan",
  "rename": "Rename",
  "renameToken": "Rename token",
  "renameTokenFolder": "Rename folder",
  "requestInfo": "Sent by {issuer} for your account: \"{account}\"",
  "requestPushChallengesPeriodically": "Request push challenges from the server periodically. Enable this if push challenges are not received normally.",
  "requestTriggerdByUserQuestion": "Was this request triggered by you?",
  "retryRollout": "Retry rollout",
  "rolloutCompleted": "Rollout completed",
  "save": "Save",
  "scanQrCode": "Scan QR-Code",
  "scanThisQrWithNewDevice": "Scan this QR code with your new device to import the token.",
  "searchTokens": "Search tokens",
  "secretIsRequired": "Secret is required",
  "secretKey": "Secret key",
  "selectFile": "Select file",
  "selectImportSource": "Select import source",
  "selectImportType": "How do you want to import the tokens?",
  "selectTokensToExport": "{count, plural, zero{} one{Select token to export} other{Select tokens to export}}",
  "selectTokensToExportHelpContent": "If a token is not listed, it is not guaranteed that it is not a privacyIDEA token.\nCurrently only manually added and imported tokens are exportable.",
  "selectTokensToExportHelpTitle": "Is your token not listed?",
  "send": "Send",
  "sendErrorDialogBody": "An unexpected error occurred in the application. The information below can be send to the developers by email to help prevent this error in the future.",
  "sendErrorLogDescription": "A predefined email is created.\nIt contains information about the app, the error and the device.\nYou can edit the email before sending it.\nYou can see here how we use the information:",
  "sendPushRequestResponseFailed": "Failed to send the response.",
  "sendingRSAPublicKey": "Sending public RSA key",
  "sendingRSAPublicKeyFailed": "Sending public RSA key failed",
  "serverNotReachable": "The server could not be reached.",
  "settings": "Settings",
  "settingsGroupGeneral": "General",
  "showDetails": "Show details",
  "showErrorLog": "Show",
  "showPrivacyPolicy": "Show privacy policy",
  "signInTitle": "Authentication required",
  "someTokensDoNotSupportPolling": "Some of the tokens are outdated and do not support polling",
  "startRollout": "Start rollout",
  "statusCode": "Status code: {statusCode}",
  "sync": "Sync",
  "syncContainerFailed": "Container synchronization failed",
  "syncFbTokenFailed": "Synchronization failed for the following tokens, please try again:",
  "synchronizePushTokens": "Synchronize push tokens",
  "synchronizesTokensWithServer": "Synchronizes tokens with the privacyIDEA server.",
  "synchronizingTokens": "Synchronizing tokens.",
  "theSecretDoesNotFitTheCurrentEncoding": "The secret does not fit the current encoding",
  "theme": "Theme",
  "thisAppIsOpenSource": "This Application is Open Source\nVisit us on GitHub",
  "timeOut": "Time out",
  "tokenDataParseError": "Token data could not be parsed",
  "tokenDetails": "Token details",
  "tokenLink": "Token link",
  "tokenSerial": "Token serial",
  "tokensAreEncrypted": "The tokens are encrypted. Please enter the password to decrypt them.",
  "tokensDoNotSupportSynchronization": "The following tokens do not support synchronization and must be rolled out again:",
  "tokensNotEncrypted": "The tokens are not encrypted and can be imported directly.",
  "tokensSuccessfullyDecrypted": "The tokens have been successfully decrypted and can now be imported.",
  "type": "Type",
  "unexpectedError": "An unexpected error occurred.",
  "unknown": "Unknown",
  "unlock": "Unlock",
  "unsupported": "The {name} [{value}] is not supported by this version of the app.",
  "useDeviceLocaleDescription": "Use device language if it is supported, otherwise default to english.",
  "useDeviceLocaleTitle": "Use device language",
  "validFor": "Valid for",
  "validUntil": "Valid until",
  "valueNotAllowed": "The {type} \"{value}\" is not an allowed value for \"{parameter}\"",
  "valueNotAllowedIn": "The {type} \"{value}\" is not an allowed value for \"{parameter}\" in \"{map}\"",
  "verboseLogging": "Verbose logging",
  "version": "Version",
  "wrongPassword": "Incorrect password",
  "yes": "Yes"
}